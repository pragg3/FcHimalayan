# Generated by Django 5.2 on 2025-07-03 22:44

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ClubHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="Default Name", max_length=100)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("message", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="CountryEvent",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        choices=[("Denmark", "Denmark"), ("Portugal", "Portugal")],
                        max_length=100,
                    ),
                ),
                ("event_name", models.CharField(max_length=200)),
                ("date", models.DateTimeField()),
                ("address", models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name="President",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="trophies/"),
                ),
                ("name", models.CharField(max_length=100)),
                ("term_start", models.DateField()),
                ("term_end", models.DateField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Trophy",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("year", models.IntegerField()),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="trophies/"),
                ),
                ("country", models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="GalleryImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="gallery/")),
                ("caption", models.CharField(blank=True, max_length=200)),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gallery_images",
                        to="myapp.country",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Group",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.countryevent",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("image", models.ImageField(upload_to="player_images/")),
                ("name", models.CharField(max_length=100)),
                ("surname", models.CharField(max_length=100)),
                ("age", models.IntegerField()),
                ("sex", models.CharField(max_length=10)),
                ("position", models.CharField(max_length=100)),
                ("jersey_number", models.IntegerField()),
                ("country", models.CharField(max_length=100)),
                ("nationality", models.CharField(max_length=100)),
                ("address", models.TextField()),
                ("contacts", models.CharField(max_length=200)),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MatchPerformance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("match_date", models.DateField()),
                ("opponent_team", models.CharField(max_length=100)),
                ("goals", models.PositiveIntegerField(default=0)),
                ("assists", models.PositiveIntegerField(default=0)),
                ("yellow_cards", models.PositiveIntegerField(default=0)),
                ("red_cards", models.PositiveIntegerField(default=0)),
                ("minutes_played", models.PositiveIntegerField(default=0)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="match_performances",
                        to="myapp.player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="News",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("headline", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("image", models.ImageField(blank=True, null=True, upload_to="news/")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("tags", models.ManyToManyField(blank=True, to="myapp.tag")),
            ],
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "group",
                    models.ForeignKey(
                        default="YOUR-GROUP-UUID-HERE",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.group",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Standing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("played", models.PositiveIntegerField(default=0)),
                ("won", models.PositiveIntegerField(default=0)),
                ("drawn", models.PositiveIntegerField(default=0)),
                ("lost", models.PositiveIntegerField(default=0)),
                ("goals_for", models.PositiveIntegerField(default=0)),
                ("goals_against", models.PositiveIntegerField(default=0)),
                ("points", models.PositiveIntegerField(default=0)),
                (
                    "team",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.team"
                    ),
                ),
            ],
            options={
                "ordering": ["-points", "-goals_for"],
            },
        ),
        migrations.CreateModel(
            name="EventRSVP",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("Going", "Going"), ("Not Going", "Not Going")],
                        default="Not Going",
                        max_length=10,
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.countryevent",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("event", "user")},
            },
        ),
    ]
